/** **/
Package: "package \"" [PtgOutId $1 int]  "\" {" [IndentIncr] [IndentNewLine] $2 [IndentDecr] [IndentNewLine] "}"
/* don't print default package if there is no content */
NoPackage: {"package \"\" {" [IndentIncr] [IndentNewLine]} $1 {[IndentDecr] [IndentNewLine] "}"}

Class: "class " $1 " as \"" [PtgOutId $2 int] "\" {" [IndentIncr] [IndentNewLine] $3 [IndentDecr] [IndentNewLine] "}"
Enum: "enum " $1 " as \"" [PtgOutId $2 int] "\" {"  [IndentIncr] [IndentNewLine] $3 [IndentDecr] [IndentNewLine] "}"


/* e.g. {field} +optional type : PhoneType */
Field: "{field} +" $3 " " [PtgOutId $1 int] " : " [PtgOutId $2 int]
FieldWithDefault: "{field} +" $3 " " [PtgOutId $1 int] " : " [PtgOutId $2 int] {" (default="} [PtgOutId $4 int] {")"}

OneOf: ".. oneof " [PtgOutId $1 int] " .." [IndentNewLine] $2 [IndentNewLine] ".." [IndentNewLine]

/* e.g. {field} +type : map<int, Person> */
MapField: "{field} +" [PtgOutId $1 int] " : map<" [PtgOutId $2 int] ":" [PtgOutId $3 int] ">"

/* e.g. MOBILE */
EnumItem: [PtgOutId $1 int]

/* e.g. AddressBook o-- Person : repeated, formerly: PTGLink */
RelationUsing: $1 " o-- " $2 " : " $3

/* Newline sequence with optional arguments */
NlSeq: $1 {[IndentNewLine]} $2

/*DotSeq: $1 {"."} $2*/

/* inner dot or $ shall be omitted if $1 or $3 are PTGNULL */
Seq3 : $1 {$2} $3

PUML: "@startuml" [IndentNewLine] $ [IndentNewLine] "@enduml" [IndentNewLine]

oneofVariant: [PtgOutId $1 int ] " variant"

/*  ORDER(PTGOut(PTGKRDebug(PTGAsIs("KResetQualifiedName"),NAME_PTG,IDN) */
/*KRDebug: "KResetQualifiedName: " $1 " <- " [PtgOutId $2 int] [IndentNewLine]*/

SourceFile: "'source file: " [CPtgOutstr $1 string] /*   const char* included_by = MapFile(LineNum); */