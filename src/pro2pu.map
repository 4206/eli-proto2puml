
/** **/
MAPSYM

ProtoDoc ::= proto_v2 proto_v3 .

Package ::= package_stmt .
Message ::= message_v2 message_v3 .
Enum    ::= enum_v2 enum_v3 .
EnumField ::= enum_field .
EnumFieldName ::= enum_field_name .

PackageName ::= package_name .
MessageName ::= message_name .
MessageBody ::= message_body_v2 message_body_v3 .
EnumName ::= enum_name .
EnumBody ::= enum_body_v2 enum_body_v3 .
EnumFieldOptions ::= enum_field_options .

Label ::= label_v2 label_v3 .
Field ::= field_v2 field_v3 .
FieldNumber ::= field_number enum_number .
FieldType ::= field_type .
FieldName ::= field_name .
FieldOptions ::= field_options .

Map ::= map_field .
MapKeyType ::= map_key_type .
MapValType ::= map_val_type .
MapName ::= map_name .

OneOf ::= oneof .
OneOfName ::= oneof_name .
OneOfBody ::= oneof_body .
OneOfField ::= oneof_field .

DotOrNot ::= dot_or_not .

Extend ::= extend_v2 .
ExtendBody ::= extend_body_v2 .

MessageType ::= message_type2 message_or_enum_type2 .

PrimitiveType ::= float_type integral_type string_type bytes_type .

MAPRULE

field_v2: label_v2 field_type field_name '=' field_number field_options ';' <$1$2$3$4$5> : rField .
field_v3: label_v3 field_type field_name '=' field_number field_options ';' <$1$2$3$4$5> : rField .

oneof: 'oneof' oneof_name oneof_body <$1$2> : rOneOf .
oneof_field: field_type field_name '=' field_number field_options ';' <$1$2$3$4> : rOneOfField .

package_stmt: 'package' package_name ';' <$1> : rPackage.

map_field: 'map' '<' map_key_type ',' map_val_type '>' map_name '=' field_number field_options ';' <$1$2$3$4$5>: rMap .

message_v2: 'message' message_name message_body_v2 <$1$2> : rMessage .
message_v3: 'message' message_name message_body_v3 <$1$2> : rMessage .
enum_v2: 'enum' enum_name enum_body_v2 <$1$2> : rEnum.
enum_v3: 'enum' enum_name enum_body_v3 <$1$2> : rEnum.

enum_field: enum_field_name '=' enum_number enum_field_options ';' <$1$2$3> : rEnumField .

extend_v2: 'extend' message_type2 extend_body_v2 <$1$2> : rExtend .